// <auto-generated />
using System;
using Carpool.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Carpool.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220717135410_CitiesMigration")]
    partial class CitiesMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Carpool.Domain.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CarMakeId")
                        .HasColumnType("integer");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ColorId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.Property<string>("Plates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CarMakeId");

                    b.HasIndex("ColorId");

                    b.HasIndex("Plates")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b1fcac3-d724-4279-b3ae-8bdab543e152"),
                            CarMakeId = 2,
                            CarModel = "Golf VIII",
                            ColorId = 1,
                            Name = "Milan's Golf",
                            NumberOfSeats = 5,
                            Plates = "BJ-513-DD"
                        },
                        new
                        {
                            Id = new Guid("deec37b8-3b63-4275-86ce-5f6c71590018"),
                            CarMakeId = 9,
                            CarModel = "Mustang",
                            ColorId = 9,
                            Name = "John's Mustang",
                            NumberOfSeats = 3,
                            Plates = "ZG-5220-IG"
                        },
                        new
                        {
                            Id = new Guid("d5a11759-df92-42d0-8871-7cc94c0bbddc"),
                            CarMakeId = 10,
                            CarModel = "V60",
                            ColorId = 3,
                            Name = "Patricia's Volvo",
                            NumberOfSeats = 5,
                            Plates = "DU-555-PP"
                        },
                        new
                        {
                            Id = new Guid("725b8890-dbd8-4c92-bdc9-3b8a4dde60ec"),
                            CarMakeId = 5,
                            CarModel = "Supra",
                            ColorId = 4,
                            Name = "Josip's Toyota",
                            NumberOfSeats = 3,
                            Plates = "PU-2224-DC"
                        },
                        new
                        {
                            Id = new Guid("110ed0f4-0952-444b-b956-6643d1b92f6c"),
                            CarMakeId = 1,
                            CarModel = "Superb",
                            ColorId = 8,
                            Name = "Damir's Skoda",
                            NumberOfSeats = 5,
                            Plates = "ST-555-BD"
                        },
                        new
                        {
                            Id = new Guid("cdaf5a1c-5526-4108-bc87-4fb87864770b"),
                            CarMakeId = 3,
                            CarModel = "A5",
                            ColorId = 10,
                            Name = "Ivan's Auid",
                            NumberOfSeats = 3,
                            Plates = "PU-333-DB"
                        },
                        new
                        {
                            Id = new Guid("d4293b9f-b99b-4058-b75b-708fd19a0eea"),
                            CarMakeId = 4,
                            CarModel = "Leon",
                            ColorId = 2,
                            Name = "Lana's Seat",
                            NumberOfSeats = 5,
                            Plates = "KC-222-DA"
                        },
                        new
                        {
                            Id = new Guid("a210d466-baa8-4a0a-85d6-4aaece761eff"),
                            CarMakeId = 8,
                            CarModel = "Sandero",
                            ColorId = 3,
                            Name = "Silvija's Dacia",
                            NumberOfSeats = 5,
                            Plates = "NA-221-IA"
                        },
                        new
                        {
                            Id = new Guid("1707e43f-9592-4278-9e41-3c8bda6bfd43"),
                            CarMakeId = 6,
                            CarModel = "SX4",
                            ColorId = 6,
                            Name = "Tomislav's Suzuki",
                            NumberOfSeats = 5,
                            Plates = "B-444-AA"
                        },
                        new
                        {
                            Id = new Guid("4bc3759c-8be0-4873-9b43-ada35ee25468"),
                            CarMakeId = 7,
                            CarModel = "Captiva",
                            ColorId = 7,
                            Name = "Nebojsa's Chevy",
                            NumberOfSeats = 5,
                            Plates = "RI-6776-DU"
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.CarMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CarMakes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Skoda"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Seat"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Suzuki"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dacia"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Volvo"
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CountyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.HasIndex("Name", "CountyId")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Carpool.Domain.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Brown"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gray"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Purple"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 10,
                            Name = "White"
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bjelovarsko-bilogorska"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brodsko-posavska"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dubrovačko-neretvanska"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Istarska"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Karlovacka"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Koprivničko-križevačka"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Krapinsko-zagorska"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ličko-senjska"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Međimurska"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Osječko-baranjska"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Požeško-slavonska"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Primorsko-goranska"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Sisačko-moslavačka"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Splitsko-dalmatinska"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Šibensko-kninska"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Varaždinska"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Virovitičko-podravska"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Vukovarsko-srijemska"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Zadarska"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Zagrebačka"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Grad Zagreb"
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDriver")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id", "EmployeeId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7fdc6c06-73b1-44bb-a347-3e431f7f9569"),
                            EmployeeId = 1,
                            EmployeeName = "Ivan Kranjec",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("02abe1ba-03f1-493b-8177-9aaf500e89c8"),
                            EmployeeId = 2,
                            EmployeeName = "Damir Rose",
                            IsDriver = false
                        },
                        new
                        {
                            Id = new Guid("8e937d63-2d34-4492-a78d-1eece2ae96b4"),
                            EmployeeId = 3,
                            EmployeeName = "Ana Lazaric",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("2c2d2438-f888-43ac-83c4-59cd259a706e"),
                            EmployeeId = 4,
                            EmployeeName = "Thomas Horvar",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("cba5a831-0b63-40a9-a870-ea0fd3a24a6a"),
                            EmployeeId = 5,
                            EmployeeName = "Marko Mlinarić",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("85874b11-1272-47d9-bdc9-e9c8d494c5c8"),
                            EmployeeId = 6,
                            EmployeeName = "Josip Tandara",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("8116a5d2-c6e3-43e5-8125-ea0e2ac5817f"),
                            EmployeeId = 7,
                            EmployeeName = "Marin Horvat",
                            IsDriver = false
                        },
                        new
                        {
                            Id = new Guid("c257a5f5-ae8d-44fc-9521-be434ca68aef"),
                            EmployeeId = 8,
                            EmployeeName = "Dino Jelusić",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("bd4187d7-77dc-464f-b14a-b989911a78d8"),
                            EmployeeId = 9,
                            EmployeeName = "Miroslav Škoro",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("1f456377-b50f-4f01-a91c-881b9e742390"),
                            EmployeeId = 10,
                            EmployeeName = "Hrvoje Plenk",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("959f1cd3-4a66-40fa-9418-693c2b47cafe"),
                            EmployeeId = 11,
                            EmployeeName = "Matej Dušan",
                            IsDriver = false
                        },
                        new
                        {
                            Id = new Guid("857ef14e-db20-4e40-a295-ece2c22df69d"),
                            EmployeeId = 12,
                            EmployeeName = "Peter Pan",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("4ad022e2-d33b-4b16-9712-30f9a585e6f0"),
                            EmployeeId = 13,
                            EmployeeName = "Hrvoje Mirić",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("4a0b971a-8638-4f6f-ac1f-6e9cf000e83d"),
                            EmployeeId = 14,
                            EmployeeName = "Jasna Gruber",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("45a4402f-a7af-49c1-be1c-33e90243b79b"),
                            EmployeeId = 15,
                            EmployeeName = "Mario Budimir",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("6b04cdea-0af0-4123-a5a7-66ef90e28936"),
                            EmployeeId = 16,
                            EmployeeName = "Igor Babić",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("615a1d27-a5c4-44e8-b500-b9c9c95754f7"),
                            EmployeeId = 17,
                            EmployeeName = "Marija Husar",
                            IsDriver = false
                        },
                        new
                        {
                            Id = new Guid("5c812862-3a42-4493-b26f-7bbc366317c4"),
                            EmployeeId = 18,
                            EmployeeName = "Melita Huskvarnić",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("1cf25a55-410a-42b1-9762-a014615e0470"),
                            EmployeeId = 19,
                            EmployeeName = "Lana Jurčević",
                            IsDriver = false
                        },
                        new
                        {
                            Id = new Guid("06086a5d-2208-4502-91eb-aace40b6dbf0"),
                            EmployeeId = 20,
                            EmployeeName = "Mihaela Dubrovnik",
                            IsDriver = false
                        },
                        new
                        {
                            Id = new Guid("a5133676-669e-49b5-8bbc-fff72304157b"),
                            EmployeeId = 21,
                            EmployeeName = "Ivan Ivanović",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("ccfa133b-8690-40db-b8de-8391eda3d206"),
                            EmployeeId = 22,
                            EmployeeName = "Luka Cvrtila",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("4aefb4ef-de24-4d80-986b-62d2292b11d7"),
                            EmployeeId = 23,
                            EmployeeName = "Dubravko Marček",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("41a016ef-5928-4127-b11f-874068c23296"),
                            EmployeeId = 24,
                            EmployeeName = "Dubravka Martinić",
                            IsDriver = true
                        },
                        new
                        {
                            Id = new Guid("1d7c83a4-dd34-41f8-83d0-1d543d525534"),
                            EmployeeId = 25,
                            EmployeeName = "Nenad Kovaček",
                            IsDriver = true
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.Car", b =>
                {
                    b.HasOne("Carpool.Domain.Entities.CarMake", "CarMake")
                        .WithMany()
                        .HasForeignKey("CarMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carpool.Domain.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarMake");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("Carpool.Domain.Entities.City", b =>
                {
                    b.HasOne("Carpool.Domain.Entities.County", "County")
                        .WithMany()
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("County");
                });
#pragma warning restore 612, 618
        }
    }
}
