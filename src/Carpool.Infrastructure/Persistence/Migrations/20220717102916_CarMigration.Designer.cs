// <auto-generated />
using System;
using Carpool.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Carpool.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220717102916_CarMigration")]
    partial class CarMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Carpool.Domain.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CarMakeId")
                        .HasColumnType("integer");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ColorId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.Property<string>("Plates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CarMakeId");

                    b.HasIndex("ColorId");

                    b.HasIndex("Plates")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66cbcce9-0325-4f6a-932e-0fde32817f0c"),
                            CarMakeId = 2,
                            CarModel = "Golf VIII",
                            ColorId = 1,
                            Name = "Milan's Golf",
                            NumberOfSeats = 5,
                            Plates = "BJ-513-DD"
                        },
                        new
                        {
                            Id = new Guid("c94194d9-042e-4c73-9dd7-88a45112c2bc"),
                            CarMakeId = 9,
                            CarModel = "Mustang",
                            ColorId = 9,
                            Name = "John's Mustang",
                            NumberOfSeats = 3,
                            Plates = "ZG-5220-IG"
                        },
                        new
                        {
                            Id = new Guid("6019784f-aebc-41bd-89e8-491218944f6a"),
                            CarMakeId = 10,
                            CarModel = "V60",
                            ColorId = 3,
                            Name = "Patricia's Volvo",
                            NumberOfSeats = 5,
                            Plates = "DU-555-PP"
                        },
                        new
                        {
                            Id = new Guid("afc4456c-3dd4-4538-a809-56762e7a91d6"),
                            CarMakeId = 5,
                            CarModel = "Supra",
                            ColorId = 4,
                            Name = "Josip's Toyota",
                            NumberOfSeats = 3,
                            Plates = "PU-2224-DC"
                        },
                        new
                        {
                            Id = new Guid("d3b7c8e3-a58d-4e96-9baa-304f5369aec3"),
                            CarMakeId = 1,
                            CarModel = "Superb",
                            ColorId = 8,
                            Name = "Damir's Skoda",
                            NumberOfSeats = 5,
                            Plates = "ST-555-BD"
                        },
                        new
                        {
                            Id = new Guid("1d0bd5fc-93cd-4e6f-811c-8eceeee27d2e"),
                            CarMakeId = 3,
                            CarModel = "A5",
                            ColorId = 10,
                            Name = "Ivan's Auid",
                            NumberOfSeats = 3,
                            Plates = "PU-333-DB"
                        },
                        new
                        {
                            Id = new Guid("2d1361c3-e104-4dca-acd0-22c6507b8fe4"),
                            CarMakeId = 4,
                            CarModel = "Leon",
                            ColorId = 2,
                            Name = "Lana's Seat",
                            NumberOfSeats = 5,
                            Plates = "KC-222-DA"
                        },
                        new
                        {
                            Id = new Guid("5ed2fa8c-c040-45bd-bbc8-857483db990c"),
                            CarMakeId = 8,
                            CarModel = "Sandero",
                            ColorId = 3,
                            Name = "Silvija's Dacia",
                            NumberOfSeats = 5,
                            Plates = "NA-221-IA"
                        },
                        new
                        {
                            Id = new Guid("749f55fb-3bdb-4a41-b761-83e0dc04e470"),
                            CarMakeId = 6,
                            CarModel = "SX4",
                            ColorId = 6,
                            Name = "Tomislav's Suzuki",
                            NumberOfSeats = 5,
                            Plates = "B-444-AA"
                        },
                        new
                        {
                            Id = new Guid("93251b81-452d-447c-8097-ddc3cded620f"),
                            CarMakeId = 7,
                            CarModel = "Captiva",
                            ColorId = 7,
                            Name = "Nebojsa's Chevy",
                            NumberOfSeats = 5,
                            Plates = "RI-6776-DU"
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.CarMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CarMakes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Skoda"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Seat"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Suzuki"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dacia"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Volvo"
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Brown"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gray"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Purple"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 10,
                            Name = "White"
                        });
                });

            modelBuilder.Entity("Carpool.Domain.Entities.Car", b =>
                {
                    b.HasOne("Carpool.Domain.Entities.CarMake", "CarMake")
                        .WithMany()
                        .HasForeignKey("CarMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carpool.Domain.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarMake");

                    b.Navigation("Color");
                });
#pragma warning restore 612, 618
        }
    }
}
